---
import SEO from '../components/SEO.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  ogImage?: string;
}

const { 
  title, 
  description = "WestGroup Financial Management - Expert fee-only financial planning, wealth management, and fiduciary advisory services in BC. Tax-efficient strategies for high-net-worth individuals.",
  keywords = "fee-only financial planning, fiduciary financial advisor, wealth management, retirement planning, tax-efficient investments, estate planning, business succession planning",
  ogImage = "/images/og-image.jpg"
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <SEO 
      title={title}
      description={description}
      keywords={keywords}
      ogImage={ogImage}
    />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json" is:inline>
      {
        "@context": "https://schema.org",
        "@type": "FinancialService",
        "name": "WestGroup Financial Management Inc.",
        "description": "Fee-only financial planning and wealth management services for high-net-worth individuals and families in British Columbia.",
        "url": "https://westgroupfinancial.com",
        "telephone": "+1-604-555-0123",
        "address": {
          "@type": "PostalAddress",
          "streetAddress": "123 Financial District",
          "addressLocality": "Surrey",
          "addressRegion": "BC",
          "postalCode": "V3S 0A1",
          "addressCountry": "CA"
        },
        "serviceArea": {
          "@type": "GeoCircle",
          "geoMidpoint": {
            "@type": "GeoCoordinates",
            "latitude": 49.1913,
            "longitude": -122.8490
          },
          "geoRadius": "100000"
        },
        "priceRange": "$$$$",
        "openingHours": "Mo-Fr 08:00-17:00",
        "sameAs": [
          "https://www.linkedin.com/company/westgroup-financial"
        ]
      }
    </script>
  </head>
  <body class="bg-dark-950 text-white overflow-x-hidden">
    <Header />
    <main class="min-h-screen">
      <slot />
    </main>
    <Footer />
    
    <!-- Background Effects -->
    <div class="fixed inset-0 -z-10 overflow-hidden pointer-events-none">
      <div class="absolute top-1/4 left-1/4 w-96 h-96 bg-primary-500/5 rounded-full blur-3xl animate-float"></div>
      <div class="absolute bottom-1/4 right-1/4 w-80 h-80 bg-accent-500/5 rounded-full blur-3xl animate-float" style="animation-delay: -3s;"></div>
      <div class="absolute top-3/4 left-1/2 w-64 h-64 bg-primary-400/5 rounded-full blur-3xl animate-float" style="animation-delay: -1.5s;"></div>
    </div>

    <script is:inline>
      // Enhanced smooth scrolling and scroll animations
      document.addEventListener('DOMContentLoaded', function() {
        // Smooth scrolling for anchor links
        const links = document.querySelectorAll('a[href^="#"]');
        links.forEach(link => {
          link.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });

        // Enhanced scroll animation observer with staggered delays
        const observerOptions = {
          threshold: 0.2,
          rootMargin: '0px 0px -80px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry, index) => {
            if (entry.isIntersecting && !entry.target.classList.contains('animate-fade-in')) {
              // Add staggered delay for elements in the same container
              const delay = index * 100;
              setTimeout(() => {
                entry.target.classList.add('animate-fade-in');
              }, delay);
            }
          });
        }, observerOptions);

        // Observe all scroll-triggered elements
        document.querySelectorAll('.observe-scroll').forEach(el => {
          observer.observe(el);
        });

        // Performance: Throttled scroll handler
        let ticking = false;
        function updateScrollAnimations() {
          // Any additional scroll-based animations can go here
          ticking = false;
        }

        window.addEventListener('scroll', function() {
          if (!ticking) {
            requestAnimationFrame(updateScrollAnimations);
            ticking = true;
          }
        }, { passive: true });

        // Add smooth page transitions
        const pageTransition = document.createElement('div');
        pageTransition.className = 'fixed inset-0 bg-dark-950 z-[9999] pointer-events-none opacity-0 transition-opacity duration-500 ease-out';
        document.body.appendChild(pageTransition);

        // Enhance all buttons with subtle animations
        const buttons = document.querySelectorAll('button, .btn-primary, .btn-secondary, .btn-accent');
        buttons.forEach(button => {
          button.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px) scale(1.02)';
          });
          
          button.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0px) scale(1)';
          });
        });
      });
    </script>
  </body>
</html>
